<UserControl x:Class="StkCommon.UI.Wpf.Views.Controls.LabeledComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:userControls="clr-namespace:StkCommon.UI.Wpf.Views.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:StkCommon.UI.Wpf.Converters"
             mc:Ignorable="d" 
             x:Name="LabeledComboBoxControl"
             d:DesignHeight="23"
             d:DesignWidth="200">
    <UserControl.Resources>
        <ResourceDictionary>
            
            <converters:BoolToVisibilityConverter x:Key="BoolToInvisibilityConverter" True="Collapsed" False="Visible"/>

            <!-- ScrollBarStyle-->
            <Style x:Key="StlnScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Orientation="Vertical" >
                                    <Track.Resources>
                                        <!-- Set the Thumb's minimum height to 50.
								The Thumb's minimum height is half the
								value of VerticalScrollBarButtonHeightKey. -->
                                        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">
                                            40
                                        </system:Double>
                                        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">
                                            40
                                        </system:Double>
                                    </Track.Resources>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb OverridesDefaultStyle="True" IsTabStop="False">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border CornerRadius="3" Background="#FFA4A4A4" Margin="1,0,1,0" />
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="MinWidth" Value="10"/>
                        <Setter Property="MaxWidth" Value="10"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="MinHeight" Value="10"/>
                        <Setter Property="MaxHeight" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"  SnapsToDevicePixels="true" >
                                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Orientation="Horizontal" >
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb OverridesDefaultStyle="True" IsTabStop="False">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border CornerRadius="3" Background="#FFA4A4A4" Margin="0,1,0,1" />
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--ComboBoxItemStyle-->
            <Geometry x:Key="ArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

            <LinearGradientBrush x:Key="StlnComboBoxBackgroundBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#fbfbfb" Offset="0" />
                <GradientStop Color="#e3e3e3" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnComboBoxBackgroundMouseOverBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#fafafa" Offset="0" />
                <GradientStop Color="#d4e0f7" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnActiveComboboxItemBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#6699ff" Offset="0" />
                <GradientStop Color="#3467cd" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="StlnComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="3,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource StlnActiveComboboxItemBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="#ffffff"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="false">
                                    <Setter Property="Foreground" Value="#000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--EditableToggleButton-->
            <Style x:Key="ComboBoxEditableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="bd" BorderThickness="1" BorderBrush="Transparent" Background="Transparent" 
                                    SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter  />
                                    <Path  x:Name="arrow" Data="{StaticResource ArrowGeometry}" Grid.Column="1" Fill="#99373B45" Margin="5,2,5,0" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="arrow" Value="#999999"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--EditableTextBox-->
            <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="#fafafa"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1,1,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid >
                                <Border >
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--StlnComboBoxEditableTemplate-->
            <ControlTemplate x:Key="StlnComboBoxEditableTemplate"  TargetType="{x:Type ComboBox}">
                <Grid x:Name="MainGrid">
                    <Popup x:Name="PART_Popup" AllowsTransparency="true"  IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" >
                        <Border x:Name="Shdw"  MinWidth="{Binding ActualWidth, ElementName=MainGrid}"  UseLayoutRounding="true" SnapsToDevicePixels="true">
                            <Border x:Name="DropDownBorder" CornerRadius="3" Background="#ffffff" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </ScrollViewer.Resources>
                                    <Grid>
                                        <Border HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Popup>
                    <Border BorderBrush="#54FFFFFF" BorderThickness="0,0,0,1" CornerRadius="3" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" Grid.ColumnSpan="2" SnapsToDevicePixels="True" UseLayoutRounding="True" />
                            <TextBox Grid.Column="0" x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}"
                                     Style="{StaticResource ComboBoxEditableTextBoxStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Style="{StaticResource ComboBoxEditableToggleButtonStyle}"/>
                        </Grid>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="True">
                        <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50"/>
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="DropDownBorder" />
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="#ffffff" />
                        <Setter Property="BorderBrush" TargetName="Border" Value="#7F000000"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsKeyboardFocused, ElementName=PART_EditableTextBox}" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border" />
                        <Setter Property="Background" Value="#ffffff" TargetName="Border" />
                    </DataTrigger>
                    <Trigger Property="IsDropDownOpen" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <!--ToggleButtonStyle-->
            <Style  x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border BorderBrush="#54FFFFFF" BorderThickness="0,0,0,1" CornerRadius="3" >
                                <Border CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter  />
                                        <Path x:Name="arrow" Data="{StaticResource ArrowGeometry}" Grid.Column="1" Fill="#99373B45" Margin="5,2,5,0" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundMouseOverBrush}"  />
                                    <Setter Property="BorderBrush" Value="#7F003399"/>
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="#7F003399"  />
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="#7F003399"  />
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#f7f7f7"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                    <Setter Property="Fill" TargetName="arrow" Value="#999999"/>
                                    <Setter Property="BorderBrush" Value="#19000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--ComboBoxStyle-->
            <Style x:Key="StlnComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="BorderBrush" Value="#7F003399"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,1,6,2"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource StlnComboBoxItemStyle}"/>
                <Setter Property="MinHeight" Value="23" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="2"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="18"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" AllowsTransparency="True">
                                    <Border x:Name="DropDownBorder"  MinWidth="{Binding ActualWidth, ElementName=MainGrid}" CornerRadius="3" Background="#ffffff" 
                                            BorderThickness="1" UseLayoutRounding="true" SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <ScrollViewer.Resources>
                                                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Style>
                                            </ScrollViewer.Resources>
                                            <Grid>
                                                <ItemsPresenter x:Name="ItemsPresenter"  />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Style="{StaticResource ComboBoxToggleButtonStyle}" />
                                <ContentPresenter Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                                  IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="true">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50"/>
                                    <Setter Property="BorderBrush" Value="#7F003399" TargetName="DropDownBorder" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="Foreground" Value="#333333"/>
                        <Setter Property="Background" Value="#fafafa"/>
                        <Setter Property="BorderBrush" Value="#66000000"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="Padding" Value="3,1,3,2"/>
                        <Setter Property="ItemContainerStyle" Value="{StaticResource StlnComboBoxItemStyle}"/>
                        <Setter Property="MinHeight" Value="23" />
                        <Setter Property="Template" Value="{StaticResource StlnComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
           
            <!-- Шаблон для LabeledComboBox в режиме редактирования-->
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="MainGrid">
                    <Popup x:Name="PART_Popup" AllowsTransparency="true"  IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" >
                        <Border x:Name="Shdw"  MinWidth="{Binding ActualWidth, ElementName=MainGrid}"  UseLayoutRounding="true" SnapsToDevicePixels="true">
                            <Border x:Name="DropDownBorder" CornerRadius="3" Background="#ffffff" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </ScrollViewer.Resources>
                                    <Grid>
                                        <Border HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Popup>
                    <Border BorderBrush="#54FFFFFF" BorderThickness="0,0,0,1" CornerRadius="3" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" Grid.ColumnSpan="2" SnapsToDevicePixels="True" UseLayoutRounding="True" />
                            <TextBox Grid.Column="0" x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" 
                                     MaxLength="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type userControls:LabeledComboBox}}, Path=MaxLength}"
                                     Style="{StaticResource ComboBoxEditableTextBoxStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Style="{StaticResource ComboBoxEditableToggleButtonStyle}"/>
                        </Grid>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="True">
                        <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50"/>
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="DropDownBorder" />
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="#ffffff" />
                        <Setter Property="BorderBrush" TargetName="Border" Value="#7F000000"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsKeyboardFocused, ElementName=PART_EditableTextBox}" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border" />
                        <Setter Property="Background" Value="#ffffff" TargetName="Border" />
                    </DataTrigger>
                    <Trigger Property="IsDropDownOpen" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--LabeledComboBoxStyle-->
            <Style x:Key="LabeledComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource StlnComboBoxStyle}">
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ComboBox ItemsSource="{Binding ElementName=LabeledComboBoxControl, Path=ItemsSource, Mode=TwoWay}" 
                  SelectedItem="{Binding ElementName=LabeledComboBoxControl, Path=SelectedItem, Mode=TwoWay}"
                  Text="{Binding ElementName=LabeledComboBoxControl, Path=Text, Mode=TwoWay}"
                  ItemTemplate="{Binding ElementName=LabeledComboBoxControl, Path=ItemTemplate, Mode=TwoWay}"
                  DisplayMemberPath="{Binding ElementName=LabeledComboBoxControl, Path=DisplayMemberPath, Mode=TwoWay}"
                  SelectedValuePath="{Binding ElementName=LabeledComboBoxControl, Path=SelectedValuePath, Mode=TwoWay}"
                  ItemContainerStyle="{Binding ElementName=LabeledComboBoxControl, Path=ItemContainerStyle, Mode=TwoWay}"
                  IsEditable="{Binding ElementName=LabeledComboBoxControl, Path=IsEditable}"
                  SelectionChanged="ComboBox_SelectionChanged" Style="{StaticResource LabeledComboBoxStyle}"/>
        
        <TextBlock IsHitTestVisible="False" 
                   TextTrimming="CharacterEllipsis"
                   Text="{Binding ElementName=LabeledComboBoxControl, Path=LabelText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   Margin="6,0,18,0" 
                   VerticalAlignment="Center"
                   Opacity="0.6"
                   FontStyle="Italic" 
                   Visibility="{Binding ElementName=LabeledComboBoxControl, Path=HasText, Converter={StaticResource BoolToInvisibilityConverter}}"/>
    </Grid>
</UserControl>
