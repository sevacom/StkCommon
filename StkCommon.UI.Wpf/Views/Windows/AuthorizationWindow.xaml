<windows:BaseDialogWindow x:Class="StkCommon.UI.Wpf.Views.Windows.AuthorizationWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:converters="clr-namespace:StkCommon.UI.Wpf.Converters"
		xmlns:attached="clr-namespace:StkCommon.UI.Wpf.Views.Attached"
		xmlns:designTime="clr-namespace:StkCommon.UI.Wpf.ViewModels.DesignTime"
		xmlns:properties="clr-namespace:StkCommon.UI.Wpf.Properties"
		xmlns:windows="clr-namespace:StkCommon.UI.Wpf.Views.Windows"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
		mc:Ignorable="d"  
		Title="{x:Static properties:Resources.AuthorizationWindow_Title}" 
		WindowStartupLocation="CenterScreen" 
		SizeToContent="WidthAndHeight" 
		MinWidth="350" 
		ResizeMode="NoResize"
		ShowInTaskbar="True"
		attached:WindowProperties.DialogResult="{Binding DialogResult, Mode=TwoWay}"
		d:DataContext="{d:DesignInstance Type=designTime:DesignMockAuthorizationViewModel, IsDesignTimeCreatable=True}" 
		Closing="AuthorizationWindowClosing">
	<Window.Background>
		<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"></SolidColorBrush>
	</Window.Background>
	<Window.Resources>
        <ResourceDictionary>

            <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible" False="Collapsed" />

            <Style x:Key="StlnScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Orientation="Vertical" >
                                    <Track.Resources>
                                        <!-- Set the Thumb's minimum height to 50.
								The Thumb's minimum height is half the
								value of VerticalScrollBarButtonHeightKey. -->
                                        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">
                                            40
                                        </system:Double>
                                        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">
                                            40
                                        </system:Double>
                                    </Track.Resources>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb OverridesDefaultStyle="True" IsTabStop="False">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border CornerRadius="3" Background="#FFA4A4A4" Margin="1,0,1,0" />
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="MinWidth" Value="10"/>
                        <Setter Property="MaxWidth" Value="10"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="MinHeight" Value="10"/>
                        <Setter Property="MaxHeight" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"  SnapsToDevicePixels="true" >
                                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Orientation="Horizontal" >
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" IsTabStop="false" Focusable="False" Opacity="0" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb OverridesDefaultStyle="True" IsTabStop="False">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border CornerRadius="3" Background="#FFA4A4A4" Margin="0,1,0,1" />
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Geometry x:Key="ArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
            <LinearGradientBrush x:Key="StlnComboBoxBackgroundBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#fbfbfb" Offset="0" />
                <GradientStop Color="#e3e3e3" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnComboBoxBackgroundMouseOverBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#fafafa" Offset="0" />
                <GradientStop Color="#d4e0f7" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnActiveComboboxItemBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#6699ff" Offset="0" />
                <GradientStop Color="#3467cd" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="StlnComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="3,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource StlnActiveComboboxItemBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="#ffffff"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="false">
                                    <Setter Property="Foreground" Value="#000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxEditableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="bd" BorderThickness="1" BorderBrush="Transparent" Background="Transparent" SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter  />
                                    <Path  x:Name="arrow" Data="{StaticResource ArrowGeometry}" Grid.Column="1" Fill="#99373B45" Margin="5,2,5,0" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true" >
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="arrow" Value="#999999"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="#fafafa"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1,1,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid >
                                <Border >
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="StlnComboBoxEditableTemplate"  TargetType="{x:Type ComboBox}">
                <Grid x:Name="MainGrid">
                    <Popup x:Name="PART_Popup" AllowsTransparency="true"  IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" >
                        <Border x:Name="Shdw"  MinWidth="{Binding ActualWidth, ElementName=MainGrid}"  UseLayoutRounding="true" SnapsToDevicePixels="true">
                            <Border x:Name="DropDownBorder" CornerRadius="3" Background="#ffffff" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </ScrollViewer.Resources>
                                    <Grid>
                                        <Border HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Popup>
                    <Border BorderBrush="Transparent" BorderThickness="0,0,0,1" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" SnapsToDevicePixels="True" UseLayoutRounding="True" />
                            <TextBox Grid.Column="0" x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBoxStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxEditableToggleButtonStyle}"/>
                        </Grid>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="True">
                        <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50"/>
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="DropDownBorder" />
                        <Setter Property="Visibility" TargetName="DropDownBorder" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="Border" Value="#ffffff" />
                        <Setter Property="BorderBrush" TargetName="Border" Value="#7F000000"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsKeyboardFocused, ElementName=PART_EditableTextBox}" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border" />
                        <Setter Property="Background" Value="#ffffff" TargetName="Border" />
                    </DataTrigger>
                    <Trigger Property="IsDropDownOpen" Value="true">
                        <Setter Property="BorderBrush" Value="#7F003399" TargetName="Border"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style  x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border BorderBrush="Transparent" BorderThickness="0,0,0,1" >
                                <Border CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter  />
                                        <Path x:Name="arrow" Data="{StaticResource ArrowGeometry}" Grid.Column="1" Fill="#99373B45" Margin="5,2,5,0" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundMouseOverBrush}"  />
                                    <Setter Property="BorderBrush" Value="#7F003399"/>
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="#7F003399"  />
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true" >
                                    <Setter Property="Background" Value="{StaticResource StlnComboBoxBackgroundBrush}" />
                                    <Setter Property="BorderBrush" Value="#7F003399"  />
                                    <Setter Property="Fill" TargetName="arrow" Value="#FF373b45"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#f7f7f7"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                    <Setter Property="Fill" TargetName="arrow" Value="#999999"/>
                                    <Setter Property="BorderBrush" Value="#19000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="StlnComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="BorderBrush" Value="#7F003399"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,1,6,2"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource StlnComboBoxItemStyle}"/>
                <Setter Property="MinHeight" Value="23" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="2"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="18"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" AllowsTransparency="True">
                                    <Border x:Name="DropDownBorder"  MinWidth="{Binding ActualWidth, ElementName=MainGrid}" CornerRadius="3" Background="#ffffff" BorderThickness="1" UseLayoutRounding="true" SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <ScrollViewer.Resources>
                                                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Style>
                                            </ScrollViewer.Resources>
                                            <Grid>
                                                <ItemsPresenter x:Name="ItemsPresenter"  />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}" />
                                <ContentPresenter Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="true">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50"/>
                                    <Setter Property="BorderBrush" Value="#7F003399" TargetName="DropDownBorder" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="Foreground" Value="#333333"/>
                        <Setter Property="Background" Value="#fafafa"/>
                        <Setter Property="BorderBrush" Value="#66000000"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="Padding" Value="3,1,3,2"/>
                        <Setter Property="ItemContainerStyle" Value="{StaticResource StlnComboBoxItemStyle}"/>
                        <Setter Property="MinHeight" Value="23" />
                        <Setter Property="Template" Value="{StaticResource StlnComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TextBlockTitleStyle">
				<Setter Property="TextBlock.FontFamily" Value="Tahoma"></Setter>
				<Setter Property="TextBlock.FontSize" Value="10pt"></Setter>
				<Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
			</Style>

			<Style x:Key="LanguageTextBlockStyle">
				<Setter Property="TextBlock.Background" Value="#2E6AC4"></Setter>
				<Setter Property="TextBlock.Foreground" Value="White"></Setter>
			</Style>

            <Style x:Key="StlnTextBoxStyle"  TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="#fafafa"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="3,1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="MinHeight" Value="23"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid UseLayoutRounding="True" >
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" UseLayoutRounding="True" SnapsToDevicePixels="True">
                                    <ScrollViewer  x:Name="PART_ContentHost" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                        <ScrollViewer.Resources>
                                            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource StlnScrollBarStyle}" >
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Margin" Value="0,1,0.5,1"/>
                                            </Style>
                                        </ScrollViewer.Resources>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="true"/>
                                        <Condition Property="IsReadOnly" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#ffffff" />
                                    <Setter Property="BorderBrush" Value="#7F000000" />
                                </MultiTrigger>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Property="Background" Value="#f7f7f7"/>
                                    <Setter Property="BorderBrush" Value="#19000000"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#f7f7f7"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                    <Setter Property="BorderBrush" Value="#19000000"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsKeyboardFocused" Value="true"/>
                                        <Condition Property="IsReadOnly" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#ffffff"/>
                                    <Setter Property="Foreground" Value="#000000"/>
                                    <Setter Property="BorderBrush" Value="#7F003399"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StlnPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="Background" Value="#fafafa"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="PasswordChar" Value="●"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Grid UseLayoutRounding="True" >
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="#ffffff" />
                                    <Setter Property="BorderBrush" Value="#7F000000" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#f7f7f7"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                    <Setter Property="BorderBrush" Value="#19000000"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Background" Value="#ffffff"/>
                                    <Setter Property="Foreground" Value="#000000"/>
                                    <Setter Property="BorderBrush" Value="#7F003399"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <LinearGradientBrush x:Key="StlnButtonBackgroundBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FFF4F4F4" Offset="0" />
                <GradientStop Color="#FFC1C1C1" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnButtonBackgroundMouseOverBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FFF9F9FA" Offset="0" />
                <GradientStop Color="#FFD5E1F7" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnButtonBackgroundClickBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#b6b6b6" Offset="0" />
                <GradientStop Color="#838383" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnButtonBackgroundDisabledBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#f7f7f7" Offset="0" />
                <GradientStop Color="#d3d3d3" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnBlueFillBrush"  StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FCFDFE" Offset="0" />
                <GradientStop Color="#D7DFEE" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StlnButtonBackgroundCheckBrush" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FFD6D6D6" Offset="0" />
                <GradientStop Color="#FFA3A3A3" Offset="1" />
            </LinearGradientBrush>

            <Style x:Key="StlnButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Background" Value="{StaticResource StlnButtonBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                <Grid >
                                    <ContentPresenter Name="ButtonText" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Grid Name="InnerShadow" Visibility="Collapsed" UseLayoutRounding="False">
                                        <Border Background="Transparent" BorderThickness="0,1,0,0" BorderBrush="#000000" Margin="0,0,0,0" Opacity="0.7" CornerRadius="2"  />
                                        <Border Background="Transparent" BorderThickness="0,1,0,0" BorderBrush="#000000" Margin="0,1,0,0" Opacity="0.5" CornerRadius="2"  />
                                        <Border Background="Transparent" BorderThickness="1,1,1,0" BorderBrush="#000000" Margin="0,2,0,0" Opacity="0.35" CornerRadius="2"  />
                                        <Border Background="Transparent" BorderThickness="1,1,1,0" BorderBrush="#000000" Margin="1,3,1,0" Opacity="0.2" CornerRadius="1"  />
                                        <Border Background="Transparent" BorderThickness="1,1,1,1" BorderBrush="#000000" Margin="2,4,2,0" Opacity="0.1" CornerRadius="1" />
                                        <Border Background="Transparent" BorderThickness="1,1,1,1" BorderBrush="#000000" Margin="3,5,3,1" Opacity="0.05" CornerRadius="1" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefault" Value="true">
                                    <Setter Property="BorderBrush" Value="#7F003399" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="{StaticResource StlnButtonBackgroundDisabledBrush}"/>
                                    <Setter Property="BorderBrush" Value="#33000000" />
                                    <Setter Property="Foreground" Value="#999999" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource StlnButtonBackgroundMouseOverBrush}" />
                                    <Setter Property="BorderBrush" Value="#7F003399" />
                                    <Setter Property="Foreground" Value="#000000" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="{StaticResource StlnButtonBackgroundClickBrush}"/>
                                    <Setter Property="BorderBrush" Value="#B2000000" />
                                    <Setter Property="Foreground" Value="#000000" />
                                    <Setter Property="Visibility" Value="Visible" TargetName="InnerShadow" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.LayoutTransform>
			<ScaleTransform CenterX="0" CenterY="0"
				ScaleX="{Binding UiScale}"
				ScaleY="{Binding UiScale}"/>
		</Grid.LayoutTransform>
		<Grid.RowDefinitions>
			<RowDefinition Height="0.4*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>
		<Border Grid.Column="0" Grid.Row="0" Background="White">
			<StackPanel Orientation="Horizontal">
				<Image Margin="18,12,18,12" Width="32" Height="32" Source="{Binding ApplicationIcon}"/>
				<TextBlock Text="{Binding ApplicationName}" VerticalAlignment="Center" Style="{StaticResource TextBlockTitleStyle}"/>
			</StackPanel>
		</Border>
		<Rectangle Grid.Row="1" Fill="{x:Static SystemColors.ActiveBorderBrush}" Grid.ColumnSpan="2" Height="1"/>
		<Grid Grid.Column="0" Grid.Row="2" Margin="12">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="*" MinWidth="224"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static properties:Resources.AuthorizationWindow_UserName}" 
					   HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0,0,6,6"  ></TextBlock>
			<TextBox Grid.Row="0" Grid.Column="1" x:Name="UserNameTextBox" 
					 Style="{StaticResource StlnTextBoxStyle}" Height="23" Margin="0,0,0,6"
					 VerticalAlignment="Center" DataContextChanged="UserNameTextBoxDataContextChanged"
					 Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged}"
					 AutomationProperties.AutomationId="textLogin"/>

			<TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static properties:Resources.AuthorizationWindow_Password}" 
					   HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0,0,6,6" ></TextBlock>
            <PasswordBox Grid.Row="1" Grid.Column="1" x:Name="PasswordTextBox" VerticalAlignment="Center" Height="23" Margin="0,0,0,6"
						 Style="{StaticResource StlnPasswordBoxStyle}"
						 attached:PassworBoxHelper.Attach="True" 
						 attached:PassworBoxHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						 AutomationProperties.AutomationId="textPassword"/>

			<TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static properties:Resources.AuthorizationWindow_Server}" 
					   HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0,0,6,6" 
					   Visibility="{Binding IsShowServer, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ComboBox Grid.Row="2" Grid.Column="1" Style="{StaticResource StlnComboBoxStyle}"
					  x:Name="ServerComboBox" Margin="0,0,0,5" Height="24" 
					  IsEditable="True" 
					  VerticalAlignment="Center"
					  ItemsSource="{Binding Servers}"
					  Text="{Binding Server, UpdateSourceTrigger=PropertyChanged}"
					  IsDropDownOpen="{Binding IsServersDropDownOpen, Mode=TwoWay}"
					  Visibility="{Binding IsShowServer, Converter={StaticResource BooleanToVisibilityConverter}}"
					  AutomationProperties.AutomationId="textServer"/>

			<TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static properties:Resources.AuthorizationWindow_DataBase}" 
					   HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0,0,6,6" 
					   Visibility="{Binding IsShowDatabase, Converter={StaticResource BooleanToVisibilityConverter}}"/>
			<ComboBox Grid.Row="3" Grid.Column="1" 
					  x:Name="DatabaseComboBox" Style="{StaticResource StlnComboBoxStyle}"
					  IsEditable="True" Margin="0,0,0,5" Height="24"
					  VerticalAlignment="Center"
					  ItemsSource="{Binding Databases}"
					  Text="{Binding Database, UpdateSourceTrigger=PropertyChanged}"
					  IsDropDownOpen="{Binding IsDataBaseDropDownOpen, Mode=TwoWay}"
					  Visibility="{Binding IsShowDatabase, Converter={StaticResource BooleanToVisibilityConverter}}"
					  AutomationProperties.AutomationId="textDataBase"/>
			
			<TextBlock Grid.Column="0" Grid.Row="4" x:Name="CurrentLanguageTextBlock" Text="{Binding InputLanguage}" 
					   VerticalAlignment="Bottom" HorizontalAlignment="Left" Style="{StaticResource LanguageTextBlockStyle}"/>
			
			<StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" KeyboardNavigation.TabIndex="0" KeyboardNavigation.IsTabStop="True">
				<Button x:Name="OkButton" Command="{Binding OkCommand}" Content="OK" Margin="6,6,0,0" Style="{StaticResource StlnButtonStyle}"
						Width="75" Height="23" IsDefault="True" Click="OkButtonClick" AutomationProperties.AutomationId="cmdOk"/>
				<Button x:Name="CancelButton" Content="Отмена" Margin="6,6,0,0" Style="{StaticResource StlnButtonStyle}"
						Width="75" Height="23" IsCancel="True" AutomationProperties.AutomationId="cmdCancel"/>
			</StackPanel>
		</Grid>
	</Grid>
</windows:BaseDialogWindow>
